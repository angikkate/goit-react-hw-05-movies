{"version":3,"file":"static/js/493.9faf45fa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MoviesDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCardContainer\":\"MovieCard_movieCardContainer__octe8\",\"movieInfo\":\"MovieCard_movieInfo__g-3eM\",\"movieName\":\"MovieCard_movieName__+QWKV\",\"movieInfoText\":\"MovieCard_movieInfoText__Aw6eW\",\"movieInfoTextBold\":\"MovieCard_movieInfoTextBold__Fcvz6\",\"moreInfoWrapper\":\"MovieCard_moreInfoWrapper__AChBz\",\"moreInfoHeader\":\"MovieCard_moreInfoHeader__jbajp\",\"list\":\"MovieCard_list__Sduoj\",\"listItem\":\"MovieCard_listItem__Ghkf8\",\"link\":\"MovieCard_link__EvibY\"};","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ThreeDots } from 'react-loader-spinner';\nimport css from './MovieCard.module.css';\n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n  movie;\n  const location = useLocation();\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  if (!title) {\n    return <ThreeDots\n    height=\"80\" \n    width=\"80\" \n    radius=\"9\"\n    color=\"#4fa94d\" \n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{ justifyContent: 'center' }}\n  />;\n  }\n\n  return (\n    <>\n      <div className={css.movieCardContainer}>\n        <img src={posterUrl} alt={`${title} poster`} />\n\n        <div className={css.movieInfo}>\n          <h2 className={css.movieName}>\n            {title ?? 'Unknown'} ({releaseYear})\n          </h2>\n          <p className={css.movieInfoText}><b>User Score:</b> {userScore}</p>\n          <p className={css.movieInfoText}><b>Overview:</b> {overview}</p>\n          \n          {genres && genres.length > 0 && (\n            <p className={css.movieInfoText}>\n              <b>Genres: </b>\n              {genres.map(genre => genre.name).join(', ')}\n            </p>\n          )}\n        </div>\n      </div>\n\n      <div className={css.moreInfoWrapper}>\n        <h3 className={css.moreInfoHeader}>Additional information</h3>\n\n        <ul className={css.list}>\n          <li className={css.listItem}>\n            <Link className={css.link}\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </Link>\n          </li>\n\n          <li className={css.listItem}>\n            <Link className={css.link}\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n\n      </div>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__yKjnD\",\"linkBack\":\"MovieDetails_linkBack__DU74h\",\"buttonBack\":\"MovieDetails_buttonBack__FQX2g\"};","import { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { fetchMovieById } from '../services/api';\nimport MovieCard from '../components/MovieCard';\nimport css from './MovieDetails.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst MovieDelails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n\n  useEffect(() => {\n    const fetchSelectedMovie = async movieId => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <div className={css.container}>\n\n        <Link className={css.linkBack} to={location?.state?.from ?? '/'}>\n          <button className={css.buttonBack} type=\"button\">\n            <BsArrowLeftShort\n              style={{ width: '25px', height: '25px', display: 'inline-block' }}\n            />\n            Go back\n          </button>\n        </Link>\n\n        <MovieCard movie={selectedMovie} />\n\n        <Suspense fallback={<ThreeDots\n            height=\"80\" \n            width=\"80\" \n            radius=\"9\"\n            color=\"#4fa94d\" \n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{ justifyContent: 'center' }}\n        />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDelails;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '6784721ee1f4bfc90701b994936d34eb';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};"],"names":["movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","className","css","src","alt","length","map","genre","name","join","to","state","from","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMovieById","movieData","console","log","type","style","display","Suspense","fallback","baseURL","API_KEY","fetchTrendMovies","axios","response","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}