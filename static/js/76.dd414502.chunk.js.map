{"version":3,"file":"static/js/76.dd414502.chunk.js","mappings":"oPACA,EAA0B,sBAA1B,EAA2D,uBAA3D,EAAwF,kBAAxF,EAAyH,2BAAzH,EAA2J,mBAA3J,EAA0L,wB,2BCyE1L,EAnEa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACX,IAAME,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,IAAeT,GAFxB,gBAGM,KADZG,EAFM,EAENA,MACCO,QACPC,EAAAA,GAAAA,UACAA,EAAAA,GAAAA,MAAY,iBACZP,EAAQ,IACRE,GAAW,KAEXF,EAAQD,GACRG,GAAW,IAVC,gDAadK,EAAAA,GAAAA,MAAY,KAAMC,SAClBC,QAAQC,IAAR,MACAV,EAAQ,IAfM,yDAAH,qDAmBfI,GACD,GAAE,CAACR,IAEAK,GAEA,SAAC,KAAD,CACEU,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,aAMpC,iBAAKC,UAAWC,EAAhB,WACE,wBAAI,SACHpB,EAAKO,QACJ,eAAIY,UAAWC,EAAf,SACCpB,EAAKqB,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EACdG,IAAKD,EAAME,aAAN,yCAAsDF,EAAME,cAA5D,oDACLC,IAAG,UAAKH,EAAMI,KAAX,eAEL,cAAGP,UAAWC,EAAd,SAAyBE,EAAMI,QAC/B,eAAGP,UAAWC,EAAd,UAA6B,cAAYE,EAAMK,eANXL,EAAMM,GAD/B,OAYf,uBAAG,wDAMV,C,+LCtEKC,EAAU,6BACVC,EAAU,mCAEHC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yCACsBC,IAFf,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qDAOhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACgBC,EADhB,iCACgDM,EADhD,gCADO,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAc,mCAAG,WAAMxC,GAAN,uFACLmC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACChC,EADD,oBACoBiC,EADpB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOd5B,EAAc,mCAAG,WAAMT,GAAN,uFACLmC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACChC,EADD,4BAC4BiC,EAD5B,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMzC,GAAN,uFACRmC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACChC,EADD,6BAC6BiC,EAD7B,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"castList\":\"Cast_castList__ARoWn\",\"img\":\"Cast_img__-isbW\",\"castListItem\":\"Cast_castListItem__CF66s\",\"name\":\"Cast_name__6UbFm\",\"character\":\"Cast_character__tKDlA\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport css from './Cast.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        if (cast.length === 0) {\n          toast.dismiss();\n          toast.error('No cast found');\n          setCast([]);\n          setLoading(false);\n        } else {\n          setCast(cast);\n          setLoading(false);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        console.log(error);\n        setCast([]);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (isLoading) {\n    return (\n      <ThreeDots\n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n      />\n    );\n  }\n\n  return (\n    <div className={css.wrapper}>\n      <h3>Cast</h3>\n      {cast.length ? (\n        <ul className={css.castList}>\n        {cast.map(actor => (\n          <li className={css.castListItem} key={actor.id}>\n            <img className={css.img}\n              src={actor.profile_path ?`https://image.tmdb.org/t/p/w200${actor.profile_path}`: `https://via.placeholder.com/200x300?text=No+Image`} \n              alt={`${actor.name} profile`}\n            />\n            <p className={css.name}>{actor.name}</p>\n            <p className={css.character}>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n      ) : (\n        <p>\n          We don't have any information about the cast yet.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '6784721ee1f4bfc90701b994936d34eb';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setLoading","useEffect","fetchCast","fetchMovieCast","length","toast","message","console","log","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","className","css","map","actor","src","profile_path","alt","name","character","id","baseURL","API_KEY","fetchTrendMovies","axios","response","data","fetchMovieByName","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}