{"version":3,"file":"static/js/415.ffc338cc.chunk.js","mappings":"yNAIMA,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA+CvB,UA5Ca,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEK,EAAAA,EAAAA,MAJF,gBAIhBC,EAJgB,EAIhBA,QACRR,EAAkBQ,GALM,kDAOxBJ,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGD,8BACGL,GACC,SAAC,KAAD,CACAQ,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,eAAgB,YAE9BZ,GACF,uBAAG,4EAIH,SAACP,EAAD,CAAWG,eAAgBA,KAIlC,C,+LC/CKiB,EAAU,6BACVC,EAAU,mCAEHV,EAAgB,mCAAG,oGACPW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,yCACsBC,IAFf,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qDAOhBC,EAAgB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mCACgBC,EADhB,iCACgDK,EADhD,gCADO,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBG,EAAc,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCQ,EADD,oBACoBP,EADpB,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAc,mCAAG,WAAMD,GAAN,uFACLN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCQ,EADD,4BAC4BP,EAD5B,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,uFACRN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCQ,EADD,6BAC6BP,EAD7B,2BADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD","sources":["pages/Home.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState, lazy } from 'react';\nimport { fetchTrendMovies } from '../services/api';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst MovieList = lazy(() => import ('../components/MovieList'));\n\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <ThreeDots\n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n      />\n      ) : error ? (\n        <p>\n          Sorry, we could not fetch the trending movies. Please try again later.\n        </p>\n      ) : (\n        <MovieList trendingMovies={trendingMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '6784721ee1f4bfc90701b994936d34eb';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};"],"names":["MovieList","lazy","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","baseURL","API_KEY","axios","response","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}