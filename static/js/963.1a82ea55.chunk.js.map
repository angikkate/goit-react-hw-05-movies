{"version":3,"file":"static/js/963.1a82ea55.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchBar/Searchbar.module.css?defa","components/SearchBar/Searchbar.jsx","pages/Movies.jsx","services/api.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__t5lAY\",\"searchInput\":\"Searchbar_searchInput__iwZ1h\",\"searchButton\":\"Searchbar_searchButton__GsylI\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    if(query.trim() === '') {\n        return toast.error('Enter text for search.');\n    }    \n    onSubmit(query);\n    setQuery('');\n  }\n\n  return (\n    <header className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus \n          placeholder=\"Search images and photos\"\n          name=\"search\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          <label className={css.searchButtonLabel}>Search</label>\n        </button>\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMovieByName } from '../services/api';\nimport SearchBar from '../components/SearchBar';\nimport css from '../components/MovieList/MovieList.module.css';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const { results } = await fetchMovieByName(query);\n        if (results.length === 0) {\n          toast.dismiss();\n          toast.error('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n          setLoading(false);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        setMovies([]);\n      }\n    };\n\n      getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  if(isLoading) {\n    return (<ThreeDots\n    height=\"80\" \n    width=\"80\" \n    radius=\"9\"\n    color=\"#4fa94d\" \n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{ justifyContent: 'center' }}\n  />);\n}\n\n  return (\n    <main>\n      <section>\n        <h1 style={{ margin: '10px' }}>Movies Page</h1>\n        <SearchBar onSubmit={handleSubmit} /> \n        <ul className={css.listMovies}>\n          {movies.map(movie => (\n            <li className={css.itemMovies} key={movie.id}>\n              <Link className={css.linkMovies} to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '6784721ee1f4bfc90701b994936d34eb';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};","// extracted by mini-css-extract-plugin\nexport default {\"listMovies\":\"MovieList_listMovies__H8Nfh\",\"itemMovies\":\"MovieList_itemMovies__AP9PC\",\"linkMovies\":\"MovieList_linkMovies__GWzXU\"};"],"names":["onSubmit","useState","query","setQuery","className","css","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","isLoading","setLoading","useEffect","get","getMovie","fetchMovieByName","results","length","message","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","style","margin","map","movie","to","id","state","from","title","baseURL","API_KEY","fetchTrendMovies","axios","response","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}