{"version":3,"file":"static/js/963.069f5fe6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchBar/Searchbar.module.css?defa","components/SearchBar/Searchbar.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__t5lAY\",\"searchInput\":\"Searchbar_searchInput__iwZ1h\",\"searchButton\":\"Searchbar_searchButton__GsylI\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    if(query.trim() === '') {\n        return toast.error('Enter text for search.');\n    }    \n    onSubmit(query);\n    setQuery('');\n  }\n\n  return (\n    <header className={css.searchbar}>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          className={css.searchInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus \n          placeholder=\"Search images and photos\"\n          name=\"search\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          <label className={css.searchButtonLabel}>Search</label>\n        </button>\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import React, { useState, useEffect, lazy } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from '../services/api';\nimport SearchBar from '../components/SearchBar';\nimport { ThreeDots } from 'react-loader-spinner';\nconst MovieList = lazy(() => import ('../components/MovieList'));\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n    const getMovie = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchMovieByName(query);\n        setMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie();\n  }, [searchParams]);\n\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <main>\n      <section>\n        <SearchBar onSubmit={handleSubmit} /> \n        {isLoading ? (\n        <ThreeDots\n        height=\"80\" \n        width=\"80\" \n        radius=\"9\"\n        color=\"#4fa94d\" \n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{ justifyContent: 'center' }}\n      />\n      ) : error ? (\n        <p>\n          Sorry, we could not fetch the movies. Please try again later.\n        </p>\n      ) : (\n        <MovieList movies={movies} title={'Movies Page'}/>\n      )}\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '6784721ee1f4bfc90701b994936d34eb';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieByName = async query => {\n  const response = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};"],"names":["onSubmit","useState","query","setQuery","className","css","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","MovieList","lazy","movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","error","setError","useEffect","get","getMovie","fetchMovieByName","results","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","title","baseURL","API_KEY","fetchTrendMovies","axios","response","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}